.\" Generated with Ronnjs/v0.1
.\" http://github.com/kapouer/ronnjs/
.
.TH "NPM\-BUNDLE" "1" "November 2010" "" ""
.
.SH "NAME"
\fBnpm-bundle\fR \-\- Bundle package dependencies
.
.SH "SYNOPSIS"
.
.nf
npm bundle [<pkg>]
.
.fi
.
.P
Run in a package folder\.
.
.IP "\(bu" 4
\fB<pkg>\fR:
The package whose dependencies are to be bundled\. Defaults to $PWD\.
See \fBnpm help install\fR for more on the ways to identify a package\.
.
.IP "" 0
.
.SH "DESCRIPTION"
When run in a package folder, this command can be used to install
package dependencies into the \fBnode_modules\fR folder\.
.
.P
When the package is installed, it will read dependencies from the local
bundle \fIbefore\fR reading any dependencies that are already installed\.
.
.P
Furthermore, when installing, npm will not attempt to install
dependencies that already exist in the bundle\.
.
.P
In this way, a command like \fBnpm bundle http://github\.com/user/project/tarball/master\fR can be used
to have a dependency that is not published on the npm registry\.  (It
still must contain a package\.json, though, of course\.)
.
.P
If called without an argument, it bundles all the dependencies of the
package\.
.
.P
In all ways, \fBnpm bundle\fR is a shorthand for this:
.
.IP "" 4
.
.nf
npm install (whatever)  \\
  \-\-root \./node_modules \\
  \-\-binroot false       \\
  \-\-manroot false
.
.fi
.
.IP "" 0
.
.P
Bundles all the dependencies
.
.SH "CAVEATS"
There is no pretty to "remove" a package from a bundle at the moment\.
However, you can do this:
.
.IP "" 4
.
.nf
npm \-\-root \./node_modules rm foo
.
.fi
.
.IP "" 0
.
.P
Bins and man pages are not installed by bundle\.
