'use strict';var cov_1i682lxryl=function(){var path='/Users/zkat/Documents/code/npm/lib/utils/output.js',hash='44704f87cdc523a64d80a9d02aad7f10755dce93',global=new Function('return this')(),gcv='__coverage__',coverageData={path:'/Users/zkat/Documents/code/npm/lib/utils/output.js',statementMap:{'0':{start:{line:2,column:10},end:{line:2,column:27}},'1':{start:{line:4,column:0},end:{line:8,column:1}},'2':{start:{line:5,column:2},end:{line:5,column:21}},'3':{start:{line:6,column:2},end:{line:6,column:39}},'4':{start:{line:7,column:2},end:{line:7,column:20}}},fnMap:{'0':{name:'(anonymous_0)',decl:{start:{line:4,column:17},end:{line:4,column:18}},loc:{start:{line:4,column:29},end:{line:8,column:1}},line:4}},branchMap:{},s:{'0':0,'1':0,'2':0,'3':0,'4':0},f:{'0':0},b:{},_coverageSchema:'332fd63041d2c1bcb487cc26dd0d5f7d97098a6c'},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();var log=(++cov_1i682lxryl.s[0],require('npmlog'));// output to stdout in a progress bar compatible way
++cov_1i682lxryl.s[1];module.exports=function(){++cov_1i682lxryl.f[0];++cov_1i682lxryl.s[2];log.clearProgress();++cov_1i682lxryl.s[3];console.log.apply(console,arguments);++cov_1i682lxryl.s[4];log.showProgress();};