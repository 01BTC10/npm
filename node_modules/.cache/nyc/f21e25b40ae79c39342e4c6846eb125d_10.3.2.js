var cov_cka99zfha=function(){var path='/Users/zkat/Documents/code/npm/lib/utils/umask.js',hash='312a3f6fec92ff0f82d71db6975b95b11826752f',global=new Function('return this')(),gcv='__coverage__',coverageData={path:'/Users/zkat/Documents/code/npm/lib/utils/umask.js',statementMap:{'0':{start:{line:1,column:12},end:{line:1,column:28}},'1':{start:{line:2,column:13},end:{line:2,column:30}},'2':{start:{line:3,column:18},end:{line:3,column:34}},'3':{start:{line:5,column:0},end:{line:5,column:22}},'4':{start:{line:8,column:0},end:{line:17,column:1}},'5':{start:{line:9,column:2},end:{line:14,column:4}},'6':{start:{line:10,column:4},end:{line:12,column:5}},'7':{start:{line:11,column:6},end:{line:11,column:47}},'8':{start:{line:13,column:4},end:{line:13,column:16}},'9':{start:{line:16,column:2},end:{line:16,column:12}}},fnMap:{'0':{name:'(anonymous_0)',decl:{start:{line:8,column:19},end:{line:8,column:20}},loc:{start:{line:8,column:34},end:{line:17,column:1}},line:8},'1':{name:'(anonymous_1)',decl:{start:{line:9,column:19},end:{line:9,column:20}},loc:{start:{line:9,column:42},end:{line:14,column:3}},line:9}},branchMap:{'0':{loc:{start:{line:10,column:4},end:{line:12,column:5}},type:'if',locations:[{start:{line:10,column:4},end:{line:12,column:5}},{start:{line:10,column:4},end:{line:12,column:5}}],line:10}},s:{'0':0,'1':0,'2':0,'3':0,'4':0,'5':0,'6':0,'7':0,'8':0,'9':0},f:{'0':0,'1':0},b:{'0':[0,0]},_coverageSchema:'332fd63041d2c1bcb487cc26dd0d5f7d97098a6c'},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();var umask=(++cov_cka99zfha.s[0],require('umask'));var npmlog=(++cov_cka99zfha.s[1],require('npmlog'));var _fromString=(++cov_cka99zfha.s[2],umask.fromString);++cov_cka99zfha.s[3];module.exports=umask;// fromString with logging callback
++cov_cka99zfha.s[4];umask.fromString=function(val){++cov_cka99zfha.f[0];++cov_cka99zfha.s[5];_fromString(val,function(err,result){++cov_cka99zfha.f[1];++cov_cka99zfha.s[6];if(err){++cov_cka99zfha.b[0][0];++cov_cka99zfha.s[7];npmlog.warn('invalid umask',err.message);}else{++cov_cka99zfha.b[0][1];}++cov_cka99zfha.s[8];val=result;});++cov_cka99zfha.s[9];return val;};